{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","tabById","find","tab","id","className","map","title","classNames","href","onClick","syncSelectedTab","content","App","useState","selectedTab","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAQjBC,EAAUH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOJ,MAAkBF,EAAK,GAErE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBACEO,UAAU,gBACV,UAAQ,cAFV,SAIE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UAAWG,IACT,CAAE,YAAaJ,IAAOH,EAAQG,KAEhC,UAAQ,MAJV,SAOE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBA7BD,SAACP,GACnBA,EAAIC,KAAOJ,GACbD,EAAcI,GA2BaQ,CAAgBR,IAHjC,SAKGI,KAPEH,UAef,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGJ,EAAQW,cChDJd,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAShB,EAAK,IAAtD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYR,SAElC,cAAC,EAAD,CACET,KAAMA,EACNC,cAXgB,SAACI,GACrBa,EAAiBb,IAWbH,cAAee,EAAYX,SCzBnCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dc4bcef8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, onTabSelected, selectedTabId },\n) => {\n  const syncSelectedTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const tabById = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div\n        className=\"tabs is-boxed\"\n        data-cy=\"tab-content\"\n      >\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': id === tabById.id },\n                )}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => syncSelectedTab(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {tabById.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTabId] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}